apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: app-data
  labels:
    type: local
spec:
  storageClassName: local-storage
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/srv/app-data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: claim-app-data
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-app-pvc
  name: nginx-app-pvc
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-app-pvc
  template:
    metadata:
      labels:
        app: nginx-app-pvc
    spec:
      volumes:
      - name: pv-test
        persistentVolumeClaim:
          claimName: claim-app-data
      containers:
      - image: nginx
        name: nginx
        volumeMounts:
        - name: pv-test
          mountPath: /usr/share/nginx/html
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-app-pvc
spec:
  selector:
    app: nginx-app-pvc
  ports:
    - port: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-app-pvc-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: nginxpvc.naufal.lab
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-app-pvc
            port:
              number: 80
